[project]
name = "mcp-use"
version = "1.1.5"
description = "MCP Library for LLMs"
authors = [
    {name = "Pietro Zullo", email = "pietro.zullo@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mcp",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "websockets>=12.0",
    "aiohttp>=3.9.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.8.0",
    "jsonschema-pydantic>=0.1.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
]
anthropic = [
    "anthropic>=0.15.0",
]
openai = [
    "openai>=1.10.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "W",  # pycodestyle warnings
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports
"tests/**/*.py" = ["F811", "F401"]  # Redefinition in test files
"mcp_use/connectors/websocket.py" = ["C901"]  # Function too complex

[tool.ruff.lint.isort]
known-first-party = ["mcp_use"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
